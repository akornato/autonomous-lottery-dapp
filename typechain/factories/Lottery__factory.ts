/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "roundStartingBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NewPlayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "roundStartingBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "enterCurrentRound",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayouts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[][]",
        name: "",
        type: "address[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRounds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundIndex",
        type: "uint256",
      },
    ],
    name: "getWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "payouts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roundDurationInBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundIndex",
        type: "uint256",
      },
    ],
    name: "withdrawPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a60035534801561001557600080fd5b506114db806100256000396000f3fe6080604052600436106100915760003560e01c80638c65c81f116100595780638c65c81f146101915780638f972385146101ce578063998f1b80146101f9578063b21c793514610236578063fef5ae431461025f57610091565b806329652e86146100965780634129b2c9146100d35780636984d070146101105780636bf90c841461013b5780638b5b9ccc14610166575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610b20565b610269565b6040516100ca9190610f40565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190610b20565b61028d565b6040516101079190610e81565b60405180910390f35b34801561011c57600080fd5b506101256103b0565b6040516101329190610ebe565b60405180910390f35b34801561014757600080fd5b50610150610408565b60405161015d9190610ebe565b60405180910390f35b34801561017257600080fd5b5061017b610460565b6040516101889190610e9c565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190610b20565b610535565b6040516101c59190610f40565b60405180910390f35b3480156101da57600080fd5b506101e3610559565b6040516101f09190610f40565b60405180910390f35b34801561020557600080fd5b50610220600480360381019061021b9190610b4d565b61055f565b60405161022d9190610e81565b60405180910390f35b34801561024257600080fd5b5061025d60048036038101906102589190610b20565b6105b9565b005b61026761079b565b005b6002818154811061027957600080fd5b906000526020600020016000915090505481565b60008060005b600184815481106102a7576102a6611399565b5b906000526020600020018054905081101561031757600184815481106102d0576102cf611399565b5b90600052602060002001826040516020016102ec929190610e59565b604051602081830303815290604052805190602001209150808061030f90611288565b915050610293565b5060006001848154811061032e5761032d611399565b5b90600052602060002001805490508260001c61034a91906112db565b9050600184815481106103605761035f611399565b5b90600052602060002001818154811061037c5761037b611399565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692505050919050565b606060008054806020026020016040519081016040528092919081815260200182805480156103fe57602002820191906000526020600020905b8154815260200190600101908083116103ea575b5050505050905090565b6060600280548060200260200160405190810160405280929190818152602001828054801561045657602002820191906000526020600020905b815481526020019060010190808311610442575b5050505050905090565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561052c5783829060005260206000200180548060200260200160405190810160405280929190818152602001828054801561051857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104ce575b505050505081526020019060010190610484565b50505050905090565b6000818154811061054557600080fd5b906000526020600020016000915090505481565b60035481565b6001828154811061056f57600080fd5b90600052602060002001818154811061058757600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060008082815481106105cf576105ce611399565b5b9060005260206000200154905060006105e6610a42565b905080821061062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190610f20565b60405180910390fd5b6000600285815481106106405761063f611399565b5b9060005260206000200154905060008111610690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068790610f00565b60405180910390fd5b600061069b8661028d565b90506000600287815481106106b3576106b2611399565b5b906000526020600020018190555060004790508173ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f1935050505015801561070c573d6000803e3d6000fd5b508281610719919061119e565b47146107285761072761130c565b5b7f37e8063b72a944a76de602f32b82fd8c2a1c6f99564c727ffaf913c7762cd4206000600160008054905061075d919061119e565b8154811061076e5761076d611399565b5b9060005260206000200154838560405161078a93929190610f5b565b60405180910390a150505050505050565b662386f26fc100003410156107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90610ee0565b60405180910390fd5b60006107ef610a42565b905060008080549050148061083357508060006001600080549050610814919061119e565b8154811061082557610824611399565b5b906000526020600020015414155b15610900576000819080600181540180825580915050600190039060005260206000200160009091909190915055600160405180602001604052803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020016000909190919091509060016108d1929190610a64565b5060023490806001815401808255809150506001900390600052602060002001600090919091909150556109d5565b6001808080549050610912919061119e565b8154811061092357610922611399565b5b90600052602060002001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260016002805490506109a3919061119e565b815481106109b4576109b3611399565b5b9060005260206000200160008282546109cd91906110bd565b925050819055505b7f29436df7317f4d239eebfb749343ead1f182a224f56f744abd08cf86a2d9cee160006001600080549050610a0a919061119e565b81548110610a1b57610a1a611399565b5b90600052602060002001543334604051610a3793929190610f92565b60405180910390a150565b600060035460035443610a559190611113565b610a5f9190611144565b905090565b828054828255906000526020600020908101928215610add579160200282015b82811115610adc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a84565b5b509050610aea9190610aee565b5090565b5b80821115610b07576000816000905550600101610aef565b5090565b600081359050610b1a8161148e565b92915050565b600060208284031215610b3657610b356113db565b5b6000610b4484828501610b0b565b91505092915050565b60008060408385031215610b6457610b636113db565b5b6000610b7285828601610b0b565b9250506020610b8385828601610b0b565b9150509250929050565b6000610b998383610bf8565b60208301905092915050565b6000610bb18383610c16565b60208301905092915050565b6000610bc98383610c25565b905092915050565b6000610bdd8383610e3b565b60208301905092915050565b610bf281611238565b82525050565b610c01816111f2565b82525050565b610c10816111f2565b82525050565b610c1f816111f2565b82525050565b6000610c308261100e565b610c3a818561106e565b9350610c4583610fc9565b8060005b83811015610c76578151610c5d8882610b8d565b9750610c688361103a565b925050600181019050610c49565b5085935050505092915050565b6000610c8e82611019565b610c98818561107f565b9350610ca383610fd9565b8060005b83811015610cdb57610cb8826113c8565b610cc28882610ba5565b9750610ccd83611047565b925050600181019050610ca7565b5085935050505092915050565b6000610cf382611024565b610cfd818561108a565b935083602082028501610d0f85610fee565b8060005b85811015610d4b5784840389528151610d2c8582610bbd565b9450610d3783611054565b925060208a01995050600181019050610d13565b50829750879550505050505092915050565b6000610d688261102f565b610d72818561109b565b9350610d7d83610ffe565b8060005b83811015610dae578151610d958882610bd1565b9750610da083611061565b925050600181019050610d81565b5085935050505092915050565b610dcc610dc782611204565b6112d1565b82525050565b6000610ddf601f836110ac565b9150610dea826113ed565b602082019050919050565b6000610e026030836110ac565b9150610e0d82611416565b604082019050919050565b6000610e256016836110ac565b9150610e3082611465565b602082019050919050565b610e448161122e565b82525050565b610e538161122e565b82525050565b6000610e658285610c83565b9150610e718284610dbb565b6020820191508190509392505050565b6000602082019050610e966000830184610c07565b92915050565b60006020820190508181036000830152610eb68184610ce8565b905092915050565b60006020820190508181036000830152610ed88184610d5d565b905092915050565b60006020820190508181036000830152610ef981610dd2565b9050919050565b60006020820190508181036000830152610f1981610df5565b9050919050565b60006020820190508181036000830152610f3981610e18565b9050919050565b6000602082019050610f556000830184610e4a565b92915050565b6000606082019050610f706000830186610e4a565b610f7d6020830185610be9565b610f8a6040830184610e4a565b949350505050565b6000606082019050610fa76000830186610e4a565b610fb46020830185610c07565b610fc16040830184610e4a565b949350505050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081549050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000600182019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110c88261122e565b91506110d38361122e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111085761110761133b565b5b828201905092915050565b600061111e8261122e565b91506111298361122e565b9250826111395761113861136a565b5b828204905092915050565b600061114f8261122e565b915061115a8361122e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156111935761119261133b565b5b828202905092915050565b60006111a98261122e565b91506111b48361122e565b9250828210156111c7576111c661133b565b5b828203905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111fd8261120e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112438261124a565b9050919050565b60006112558261125c565b9050919050565b60006112678261120e565b9050919050565b600061128161127c836113e0565b6111d2565b9050919050565b60006112938261122e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112c6576112c561133b565b5b600182019050919050565b6000819050919050565b60006112e68261122e565b91506112f18361122e565b9250826113015761130061136a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113d4825461126e565b9050919050565b600080fd5b60008160001c9050919050565b7f4d696e696d756d206265742076616c756520697320302e303120657468657200600082015250565b7f5061796f75742068617320616c7265616479206265656e20776974686472617760008201527f6e20666f72207468697320726f756e6400000000000000000000000000000000602082015250565b7f526f756e64206e6f742066696e69736865642079657400000000000000000000600082015250565b6114978161122e565b81146114a257600080fd5b5056fea2646970667358221220691140b8f5e00ef9930d5d1df4cf6c482e515612720e2d71cd77f3e36487d94664736f6c63430008060033";

export class Lottery__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
